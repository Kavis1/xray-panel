# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import node_pb2 as proto_dot_node__pb2


class NodeServiceStub(object):
    """Node Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Start = channel.unary_unary(
                '/node.NodeService/Start',
                request_serializer=proto_dot_node__pb2.Backend.SerializeToString,
                response_deserializer=proto_dot_node__pb2.BaseInfoResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/node.NodeService/Stop',
                request_serializer=proto_dot_node__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_node__pb2.BaseInfoResponse.FromString,
                )
        self.GetBaseInfo = channel.unary_unary(
                '/node.NodeService/GetBaseInfo',
                request_serializer=proto_dot_node__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_node__pb2.BaseInfoResponse.FromString,
                )
        self.GetLogs = channel.unary_stream(
                '/node.NodeService/GetLogs',
                request_serializer=proto_dot_node__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_node__pb2.Log.FromString,
                )
        self.SyncUser = channel.unary_unary(
                '/node.NodeService/SyncUser',
                request_serializer=proto_dot_node__pb2.User.SerializeToString,
                response_deserializer=proto_dot_node__pb2.SyncResponse.FromString,
                )
        self.SyncUsers = channel.unary_unary(
                '/node.NodeService/SyncUsers',
                request_serializer=proto_dot_node__pb2.Users.SerializeToString,
                response_deserializer=proto_dot_node__pb2.SyncResponse.FromString,
                )
        self.GetStats = channel.unary_unary(
                '/node.NodeService/GetStats',
                request_serializer=proto_dot_node__pb2.StatsRequest.SerializeToString,
                response_deserializer=proto_dot_node__pb2.StatsResponse.FromString,
                )
        self.GetSystemStats = channel.unary_unary(
                '/node.NodeService/GetSystemStats',
                request_serializer=proto_dot_node__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_node__pb2.SystemStatsResponse.FromString,
                )
        self.GetOnlineUsers = channel.unary_unary(
                '/node.NodeService/GetOnlineUsers',
                request_serializer=proto_dot_node__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_node__pb2.OnlineUsersResponse.FromString,
                )


class NodeServiceServicer(object):
    """Node Service Definition
    """

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBaseInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnlineUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=proto_dot_node__pb2.Backend.FromString,
                    response_serializer=proto_dot_node__pb2.BaseInfoResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=proto_dot_node__pb2.Empty.FromString,
                    response_serializer=proto_dot_node__pb2.BaseInfoResponse.SerializeToString,
            ),
            'GetBaseInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBaseInfo,
                    request_deserializer=proto_dot_node__pb2.Empty.FromString,
                    response_serializer=proto_dot_node__pb2.BaseInfoResponse.SerializeToString,
            ),
            'GetLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetLogs,
                    request_deserializer=proto_dot_node__pb2.Empty.FromString,
                    response_serializer=proto_dot_node__pb2.Log.SerializeToString,
            ),
            'SyncUser': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncUser,
                    request_deserializer=proto_dot_node__pb2.User.FromString,
                    response_serializer=proto_dot_node__pb2.SyncResponse.SerializeToString,
            ),
            'SyncUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncUsers,
                    request_deserializer=proto_dot_node__pb2.Users.FromString,
                    response_serializer=proto_dot_node__pb2.SyncResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=proto_dot_node__pb2.StatsRequest.FromString,
                    response_serializer=proto_dot_node__pb2.StatsResponse.SerializeToString,
            ),
            'GetSystemStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemStats,
                    request_deserializer=proto_dot_node__pb2.Empty.FromString,
                    response_serializer=proto_dot_node__pb2.SystemStatsResponse.SerializeToString,
            ),
            'GetOnlineUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnlineUsers,
                    request_deserializer=proto_dot_node__pb2.Empty.FromString,
                    response_serializer=proto_dot_node__pb2.OnlineUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'node.NodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NodeService(object):
    """Node Service Definition
    """

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/Start',
            proto_dot_node__pb2.Backend.SerializeToString,
            proto_dot_node__pb2.BaseInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/Stop',
            proto_dot_node__pb2.Empty.SerializeToString,
            proto_dot_node__pb2.BaseInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBaseInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/GetBaseInfo',
            proto_dot_node__pb2.Empty.SerializeToString,
            proto_dot_node__pb2.BaseInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/node.NodeService/GetLogs',
            proto_dot_node__pb2.Empty.SerializeToString,
            proto_dot_node__pb2.Log.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/SyncUser',
            proto_dot_node__pb2.User.SerializeToString,
            proto_dot_node__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/SyncUsers',
            proto_dot_node__pb2.Users.SerializeToString,
            proto_dot_node__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/GetStats',
            proto_dot_node__pb2.StatsRequest.SerializeToString,
            proto_dot_node__pb2.StatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSystemStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/GetSystemStats',
            proto_dot_node__pb2.Empty.SerializeToString,
            proto_dot_node__pb2.SystemStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOnlineUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.NodeService/GetOnlineUsers',
            proto_dot_node__pb2.Empty.SerializeToString,
            proto_dot_node__pb2.OnlineUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
