"""Initial migration

Revision ID: 692281e7034b
Revises: 
Create Date: 2025-10-05 17:39:40.603380

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = '692281e7034b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_sudo', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('roles', sa.JSON(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=False),
    sa.Column('mfa_secret', sa.String(length=32), nullable=True),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    op.create_index(op.f('ix_admins_username'), 'admins', ['username'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('admin_username', sa.String(length=64), nullable=True),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('resource_type', sa.String(length=64), nullable=True),
    sa.Column('resource_id', sa.String(length=128), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_admin_id'), 'audit_logs', ['admin_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('inbounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('listen', sa.String(length=64), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('network', sa.String(length=20), nullable=False),
    sa.Column('security', sa.String(length=20), nullable=True),
    sa.Column('tls_settings', sa.JSON(), nullable=True),
    sa.Column('reality_settings', sa.JSON(), nullable=True),
    sa.Column('stream_settings', sa.JSON(), nullable=True),
    sa.Column('sniffing_enabled', sa.Boolean(), nullable=False),
    sa.Column('sniffing_dest_override', sa.JSON(), nullable=True),
    sa.Column('domain_strategy', sa.String(length=32), nullable=True),
    sa.Column('fallbacks', sa.JSON(), nullable=True),
    sa.Column('excluded_nodes', sa.JSON(), nullable=True),
    sa.Column('remark', sa.String(length=255), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inbounds_id'), 'inbounds', ['id'], unique=False)
    op.create_index(op.f('ix_inbounds_tag'), 'inbounds', ['tag'], unique=True)
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('api_port', sa.Integer(), nullable=False),
    sa.Column('api_protocol', sa.String(length=10), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('ssl_cert', sa.Text(), nullable=True),
    sa.Column('ssl_key', sa.Text(), nullable=True),
    sa.Column('ssl_ca', sa.Text(), nullable=True),
    sa.Column('usage_ratio', sa.Float(), nullable=False),
    sa.Column('traffic_limit_bytes', sa.BigInteger(), nullable=True),
    sa.Column('traffic_used_bytes', sa.BigInteger(), nullable=False),
    sa.Column('traffic_notify_percent', sa.Integer(), nullable=False),
    sa.Column('is_connected', sa.Boolean(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('xray_running', sa.Boolean(), nullable=False),
    sa.Column('xray_version', sa.String(length=32), nullable=True),
    sa.Column('node_version', sa.String(length=32), nullable=True),
    sa.Column('core_type', sa.String(length=32), nullable=True),
    sa.Column('cpu_count', sa.Integer(), nullable=True),
    sa.Column('cpu_model', sa.String(length=255), nullable=True),
    sa.Column('total_ram_mb', sa.Integer(), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('view_position', sa.Integer(), nullable=False),
    sa.Column('add_host_to_inbounds', sa.Boolean(), nullable=False),
    sa.Column('last_status_message', sa.Text(), nullable=True),
    sa.Column('last_connected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('uptime_seconds', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_index(op.f('ix_nodes_name'), 'nodes', ['name'], unique=True)
    op.create_table('settings',
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('traffic_limit_bytes', sa.BigInteger(), nullable=True),
    sa.Column('traffic_used_bytes', sa.BigInteger(), nullable=False),
    sa.Column('traffic_limit_strategy', sa.String(length=20), nullable=False),
    sa.Column('last_traffic_reset_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expire_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sub_revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sub_last_user_agent', sa.String(length=255), nullable=True),
    sa.Column('hwid_device_limit', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('online_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('webhook_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('webhook_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=64), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('tries', sa.Integer(), nullable=False),
    sa.Column('max_tries', sa.Integer(), nullable=False),
    sa.Column('next_try_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhook_queue_event_type'), 'webhook_queue', ['event_type'], unique=False)
    op.create_index(op.f('ix_webhook_queue_id'), 'webhook_queue', ['id'], unique=False)
    op.create_index(op.f('ix_webhook_queue_next_try_at'), 'webhook_queue', ['next_try_at'], unique=False)
    op.create_index(op.f('ix_webhook_queue_webhook_id'), 'webhook_queue', ['webhook_id'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=512), nullable=False),
    sa.Column('secret', sa.String(length=255), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('events', sa.JSON(), nullable=False),
    sa.Column('total_deliveries', sa.Integer(), nullable=False),
    sa.Column('failed_deliveries', sa.Integer(), nullable=False),
    sa.Column('last_delivery_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_delivery_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhooks_id'), 'webhooks', ['id'], unique=False)
    op.create_table('hwid_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hwid', sa.String(length=255), nullable=False),
    sa.Column('device_os', sa.String(length=64), nullable=True),
    sa.Column('ver_os', sa.String(length=64), nullable=True),
    sa.Column('device_model', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('first_seen_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hwid_devices_hwid'), 'hwid_devices', ['hwid'], unique=False)
    op.create_index(op.f('ix_hwid_devices_id'), 'hwid_devices', ['id'], unique=False)
    op.create_index(op.f('ix_hwid_devices_user_id'), 'hwid_devices', ['user_id'], unique=False)
    op.create_table('stats_inbound_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inbound_tag', sa.String(length=64), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('bytes_uploaded', sa.BigInteger(), nullable=False),
    sa.Column('bytes_downloaded', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stats_inbound_daily_date'), 'stats_inbound_daily', ['date'], unique=False)
    op.create_index(op.f('ix_stats_inbound_daily_id'), 'stats_inbound_daily', ['id'], unique=False)
    op.create_index(op.f('ix_stats_inbound_daily_inbound_tag'), 'stats_inbound_daily', ['inbound_tag'], unique=False)
    op.create_index(op.f('ix_stats_inbound_daily_node_id'), 'stats_inbound_daily', ['node_id'], unique=False)
    op.create_table('stats_system_node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('cpu_cores', sa.Integer(), nullable=False),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=False),
    sa.Column('mem_total_mb', sa.Integer(), nullable=False),
    sa.Column('mem_used_mb', sa.Integer(), nullable=False),
    sa.Column('mem_usage_percent', sa.Float(), nullable=False),
    sa.Column('net_rx_bytes', sa.BigInteger(), nullable=False),
    sa.Column('net_tx_bytes', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stats_system_node_id'), 'stats_system_node', ['id'], unique=False)
    op.create_index(op.f('ix_stats_system_node_node_id'), 'stats_system_node', ['node_id'], unique=False)
    op.create_index(op.f('ix_stats_system_node_timestamp'), 'stats_system_node', ['timestamp'], unique=False)
    op.create_table('stats_user_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('bytes_uploaded', sa.BigInteger(), nullable=False),
    sa.Column('bytes_downloaded', sa.BigInteger(), nullable=False),
    sa.Column('resets_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stats_user_daily_date'), 'stats_user_daily', ['date'], unique=False)
    op.create_index(op.f('ix_stats_user_daily_id'), 'stats_user_daily', ['id'], unique=False)
    op.create_index(op.f('ix_stats_user_daily_node_id'), 'stats_user_daily', ['node_id'], unique=False)
    op.create_index(op.f('ix_stats_user_daily_user_id'), 'stats_user_daily', ['user_id'], unique=False)
    op.create_table('user_inbounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('inbound_tag', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_inbounds_id'), 'user_inbounds', ['id'], unique=False)
    op.create_index(op.f('ix_user_inbounds_inbound_tag'), 'user_inbounds', ['inbound_tag'], unique=False)
    op.create_index(op.f('ix_user_inbounds_user_id'), 'user_inbounds', ['user_id'], unique=False)
    op.create_table('user_proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('vmess_uuid', sa.String(length=36), nullable=True),
    sa.Column('vless_uuid', sa.String(length=36), nullable=True),
    sa.Column('vless_flow', sa.String(length=32), nullable=True),
    sa.Column('trojan_password', sa.String(length=255), nullable=True),
    sa.Column('ss_password', sa.String(length=255), nullable=True),
    sa.Column('ss_method', sa.String(length=32), nullable=True),
    sa.Column('hysteria_password', sa.String(length=255), nullable=True),
    sa.Column('hysteria2_password', sa.String(length=255), nullable=True),
    sa.Column('network', sa.String(length=20), nullable=True),
    sa.Column('security', sa.String(length=20), nullable=True),
    sa.Column('sni', sa.String(length=255), nullable=True),
    sa.Column('alpn', sa.JSON(), nullable=True),
    sa.Column('fingerprint', sa.String(length=32), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_proxies_id'), 'user_proxies', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_proxies_id'), table_name='user_proxies')
    op.drop_table('user_proxies')
    op.drop_index(op.f('ix_user_inbounds_user_id'), table_name='user_inbounds')
    op.drop_index(op.f('ix_user_inbounds_inbound_tag'), table_name='user_inbounds')
    op.drop_index(op.f('ix_user_inbounds_id'), table_name='user_inbounds')
    op.drop_table('user_inbounds')
    op.drop_index(op.f('ix_stats_user_daily_user_id'), table_name='stats_user_daily')
    op.drop_index(op.f('ix_stats_user_daily_node_id'), table_name='stats_user_daily')
    op.drop_index(op.f('ix_stats_user_daily_id'), table_name='stats_user_daily')
    op.drop_index(op.f('ix_stats_user_daily_date'), table_name='stats_user_daily')
    op.drop_table('stats_user_daily')
    op.drop_index(op.f('ix_stats_system_node_timestamp'), table_name='stats_system_node')
    op.drop_index(op.f('ix_stats_system_node_node_id'), table_name='stats_system_node')
    op.drop_index(op.f('ix_stats_system_node_id'), table_name='stats_system_node')
    op.drop_table('stats_system_node')
    op.drop_index(op.f('ix_stats_inbound_daily_node_id'), table_name='stats_inbound_daily')
    op.drop_index(op.f('ix_stats_inbound_daily_inbound_tag'), table_name='stats_inbound_daily')
    op.drop_index(op.f('ix_stats_inbound_daily_id'), table_name='stats_inbound_daily')
    op.drop_index(op.f('ix_stats_inbound_daily_date'), table_name='stats_inbound_daily')
    op.drop_table('stats_inbound_daily')
    op.drop_index(op.f('ix_hwid_devices_user_id'), table_name='hwid_devices')
    op.drop_index(op.f('ix_hwid_devices_id'), table_name='hwid_devices')
    op.drop_index(op.f('ix_hwid_devices_hwid'), table_name='hwid_devices')
    op.drop_table('hwid_devices')
    op.drop_index(op.f('ix_webhooks_id'), table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index(op.f('ix_webhook_queue_webhook_id'), table_name='webhook_queue')
    op.drop_index(op.f('ix_webhook_queue_next_try_at'), table_name='webhook_queue')
    op.drop_index(op.f('ix_webhook_queue_id'), table_name='webhook_queue')
    op.drop_index(op.f('ix_webhook_queue_event_type'), table_name='webhook_queue')
    op.drop_table('webhook_queue')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_settings_key'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_nodes_name'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_inbounds_tag'), table_name='inbounds')
    op.drop_index(op.f('ix_inbounds_id'), table_name='inbounds')
    op.drop_table('inbounds')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_admin_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_admins_username'), table_name='admins')
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
